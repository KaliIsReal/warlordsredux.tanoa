#include "common\functions\warlords_constants.inc"
#include "common\scripts\taw_vd\GUI.h"

#include "common\ui\defines.hpp"
#include "common\ui\controls.hpp"


onLoadName = "Warlords Redux 2.5"; 
dev = "Jezuro + WSV";
author = "Jezuro + WSV";

respawn = 3;
respawnDelay = 30;
respawnOnStart = -1;

disabledAI = 1;


/*******************************START CUSTOM CONTENT HERE****************************/

enableDebugConsole = 1;

//revive settings below
ReviveMode = 0;                         //0: disabled, 1: enabled, 2: controlled by player attributes
ReviveUnconsciousStateMode = 0;         //0: basic, 1: advanced, 2: realistic
ReviveRequiredTrait = 0;                //0: none, 1: medic trait is required
ReviveRequiredItems = 2;                //0: none, 1: medkit, 2: medkit or first aid kit
ReviveRequiredItemsFakConsumed = 1;     //0: first aid kit is not consumed upon revive, 1: first aid kit is consumed
ReviveDelay = 15;                        //time needed to revive someone (in secs)
ReviveMedicSpeedMultiplier = 2;         //speed multiplier for revive performed by medic
ReviveForceRespawnDelay = 3;            //time needed to perform force respawn (in secs)
ReviveBleedOutDelay = 180;              //unconscious state duration (in secs)
//end of revive section 

//earplug script stuff
class RscTitles
{
	#include "common\scripts\GF_Earplugs\GF_Earplugs_HPP.hpp"	
};
//end of earplug script info

allowFunctionsLog = 1;


class CfgFunctions {
	class BIS
	{
    	class Client 
		{
    		file = "common\functions\client";
			class WL2_cpBalance {};
    		class WL2_announcer {};
			class WL2_assetMapControl {};
			class WL2_forceGroupIconsFunctionality {};
			class WL2_friendlyFireHandleClient {};
			class WL2_groupIconClickHandle {};
			class WL2_groupIconEnterHandle {};
			class WL2_groupIconLeaveHandle {};
			class WL2_handleEnemyCapture {};
			class WL2_hintHandle {};
			class WL2_initClient {};
			class WL2_mapControlHandle {};
			class WL2_mapDrawHandle {};
			class WL2_music {};
			class WL2_onPause {};
			class WL2_orderAircraft {};
			class WL2_orderAirdrop {};
			class WL2_orderArsenal {};
			class WL2_orderDefence {};
			class WL2_orderFastTravel {};
			class WL2_orderFundsTransfer {};
			class WL2_orderLastLoadout {};
			class WL2_orderNaval {};
			class WL2_orderSavedLoadout {};
			class WL2_orderSectorScan {};
			class WL2_orderTargetReset {};
			class WL2_purchaseMenuOpeningHandle {};
			class WL2_refreshCurrentTargetData {};
			class WL2_refreshIconsToDraw {};
			class WL2_refreshOSD {};
			class WL2_requestPurchase {};
			class WL2_sceneDrawHandle {};
			class WL2_sectorCaptureStatus {};
			class WL2_sectorMarkerUpdate {};
			class WL2_sectorRevealHandle {};
			class WL2_sectorSelectionHandle {};
			class WL2_sectorsInitClient {};
			class WL2_sectorOwnershipHandleClient {};
			class WL2_selectedTargetsHandle {};
			class WL2_sendClientRequest {};
			class WL2_setOSDEvent {};
			class WL2_setupUI {};
			class WL2_sideToFaction {};
			class WL2_smoothText {};
			class WL2_targetResetHandle {};
			class WL2_targetSelected {};
			class WL2_targetSelectionHandleClient {};
			class WL2_teammatesAvailability {};
			class WL2_zoneRestrictionHandleClient {};
			class WL2_clientFundsUpdate {};
			class WL2_clientFundsUpdateLoop {};
			class WL2_clientFundsRecieve {};
			class WL2_timer {};
			class WL2_orderFTVehicleFT {};
			class WL2_orderFTVehicle {};
			class WL2_welcome {};
			class WL2_displayCPtransfer {};
    	};
		class Server 
		{
    		file = "common\functions\server";
    		class WL2_assetRelevanceCheck {};
			class WL2_detectNewPlayers {};
			class WL2_friendlyFireHandleServer {};
			class WL2_garbageCollector {};
			class WL2_changeSectorOwnership {};
			class WL2_incomePayoff {};
			class WL2_initServer {};
			class WL2_loadFactionClasses {};
			class WL2_mainAIHandle {};
			class WL2_mineLimit {};
			class WL2_populateSector {};
			class WL2_processClientRequest {};
			class WL2_processRunways {};
			class WL2_sectorsInitServer {};
			class WL2_selectTarget {};
			class WL2_setupNewWarlord {};
			class WL2_targetResetHandleServer {};
			class WL2_targetSelectionHandleServer {};
			class WL2_zoneRestrictionHandleServer {};
			class WL2_dataBase {};
    	};
    	class Common {
    		file = "common\functions\common";
    		class WL2_findSpawnPositions {};
			class WL2_fundsControl {};
			class WL2_generateVariableName {};
			class WL2_getRespawnMarkers {};
			class WL2_getSideBase {};
			class WL2_handleRespawnMarkers {};
			class WL2_income {};
			class WL2_initCommon {};
			class WL2_killRewardHandle {};
			class WL2_missionEndHandle {};
			class WL2_newAssetHandle {};
			class WL2_parsePurchaseList {};
			class WL2_playersListHandle {};
			class WL2_respawnHandle {};
			class WL2_sectorScanHandle {};
			class WL2_sortSectorArrays {};
			class WL2_syncedTime {};
			class WL2_updateSectorArrays {};
			class WL2_varsInit {};
    	};
		class Subroutines 
		{
    		file = "common\functions\subroutines";
    		class WL2_sub_arsenalSetup {};
			class WL2_sub_assetAssemblyHandle {};
			class WL2_sub_deleteAsset {};
			class WL2_sub_purchaseMenuAssetAvailability {};
			class WL2_sub_purchaseMenuGetUIScale {};
			class WL2_sub_purchaseMenuHandleDLC {};
			class WL2_sub_purchaseMenuRefresh {};
			class WL2_sub_purchaseMenuSetAssetDetails {};
			class WL2_sub_purchaseMenuSetItemsList {};
			class WL2_sub_vehicleLockAction {};
			class WL2_sub_logisticsAddAction {};
			class WL2_sub_dazzlerAction {};
    	};
	};

/*******************************START OF CUSTOM CONTENT HERE****************************/
	#include "common\scripts\GOM\functions\GOM_fnc_functions.hpp" //GOM_fnc_aircraftLoadout V1.35 made by Grumpy Old Man 17-5-2017
	#include "common\scripts\taw_vd\CfgFunctions.hpp" //Distance MOD
	//Unflip Mod
	class KS
	{	
		class normalFunctions
		{
			file = "common\scripts\VUnflip\functions";	// Folder where all functions are.
			class unflipVehicle {};
		};
	};		

	class KSLOOP
	{
		class spawnThese //Seriously "spawn" these, do not "call" them!
		{
			file = "common\scripts\VUnflip\functions\loops";
			class unflipVehicleAddAction {};
		};
		
	};	
	class DAPS
	{
		class MISC
		{
			file = "common\scripts\DAPS\Scripts\Misc";
			class MisguideMissile {};
		};
	};
	/* Keep for later if needed	
	class DAPS
	{
		class APS 
		{
			file = "common\scripts\DAPS\Scripts\APS";
			class Afganit {};
			class Afganit2 {};
			class AMAP {};
			class AMAP2 {};
			class APSAfganit {};
			class APSAfganitE {};
			class APSAMAP {};
			class APSArena {};
			class APSDazzler {};
			class APSDrozd {};
			class APSDrozd2 {};
			class APSheavy {};
			class APSironFist {};
			class APSlight {};
			class APSmedium {};
			class APSTrophyHV {};
			class APSTrophyHVe {};
			class APSTrophyLV {};
			class Arena {};
			class Dazzler {};
			class Drozd {};
			class Drozd2 {};
			class Generic {};
			class IronFist {};
			class TrophyHV {};
			class TrophyHVe {};
			class TrophyHVe2 {};
			class TrophyLV {};
			class TrophyMV {};
		};
		class DIRCM
		{
			file = "common\scripts\DAPS\Scripts\DIRCM";
			class MisguideSAM {};
			class Nemesis {};
			class Nemesis2 {};
			class Report {};
			class Vitebsk {};
			class Vitebsk2 {};
		};
		class Management
		{
			file = "common\scripts\DAPS\Scripts\Management";
			class AssignAPS {};
			class BroadcastTypes {};
			class CustomAmmo {};
			class ForceRecheck {};
			class KeyPressed {};
			class KeyPressed2 {};
			class RearmAPS {};
			class RegisterAll {};
			class RegisterLoop {};
			class RegisterNewType {};
			class RegisterVehicle {};
		};
		class Misc
		{
			file = "common\scripts\DAPS\Scripts\Misc";
			class Active {};
			class Blast {};
			class CanSmoke {};
			class CountAmmo {};
			class DeductAmmo {};
			class GetDirection {};
			class GetIncoming {};
			class HasCharges {};
			class IsIRguided {};
			class IsLaserGuided {};
			class IsRadarGuided {};
			class IsVisualGuided {};
			class MisguideMissile {};
			class popSmoke {};
			class PopSmoke2 {};
			class PopSmokeTurn {};
			class React {};
			class Rearm {};
			class Rearm2 {};
			class RearmCheck {};
			class RelDir {};
			class RelDir2 {};
			class RelPos {};
			class Time {};
		}:
		class Report
		{
			file = "common\scripts\DAPS\Scripts\Report";
			class DetailedReport {};
			class Indicator {};
			class Report {};
			class ReportRearm {};
		};
	};
	*/
};

//Advanced Sling Load Mod
class CfgRemoteExec
{
	class Functions
	{
		class ASL_Pickup_Ropes { allowedTargets=0; };
		class ASL_Deploy_Ropes_Index { allowedTargets=0; };
		class ASL_Rope_Set_Mass { allowedTargets=0; };
		class ASL_Extend_Ropes { allowedTargets=0; };
		class ASL_Shorten_Ropes { allowedTargets=0; };
		class ASL_Release_Cargo { allowedTargets=0; };
		class ASL_Retract_Ropes { allowedTargets=0; };
		class ASL_Deploy_Ropes { allowedTargets=0; };
		class ASL_Attach_Ropes { allowedTargets=0; };
		class ASL_Drop_Ropes { allowedTargets=0; };
		class ASL_Hint { allowedTargets=1; };
		class ASL_Hide_Object_Global { allowedTargets=2; };
	};
};


class CfgCommunicationMenu
{

	#include "common\scripts\GOM\functions\GOM_fnc_aircraftLoadoutMenu.hpp"

};

#include "common\scripts\GOM\dialogs\GOM_dialog_parents.hpp"
#include "common\scripts\GOM\dialogs\GOM_dialog_controls.hpp"

/*******************************END OF CUSTOM CONTENT HERE****************************/

class Header
{
	gameType = Warlords;
	minPlayers = 1;
	maxPlayers = 100;
};

onPauseScript[] = {BIS_fnc_WL2_onPause};

#include "requisitions.inc"

corpseManagerMode = 1;
corpseLimit = 50;
corpseRemovalMinTime = 300;
corpseRemovalMaxTime = 1500; //1800

wreckManagerMode = 1;
wreckLimit = 32; //50
wreckRemovalMinTime = 120; //60
wreckRemovalMaxTime = 240; //120

minPlayerDistance = WL_ASSET_REMOVAL_SAFEZONE;

class CfgDebriefing
{
	class BIS_WLVictoryGUER
	{
		title = $STR_A3_endgame_debriefing_victory;
		subtitle = $STR_A3_WL_game_over_victory;
		picture = "n_installation";
		pictureBackground = "\A3\Map_Altis\data\ui_Altis_ca.paa";
		pictureColor[] = {0.0,0.3,0.6,1};
	};
	class BIS_WLDefeatGUER
	{
		title = $STR_A3_endgame_debriefing_defeat;
		subtitle = $STR_A3_WL_game_over_loss;
		picture = "n_installation";
		pictureBackground = "\A3\Map_Altis\data\ui_Altis_ca.paa";
		pictureColor[] = {0,0.5,0,1};
	};
};

class Params
{
	class BIS_WL_savingEnabled
	{
		title = $STR_A3_WL_param_saving;
		values[] = {1, 0};
		texts[] = {$STR_DISP_OPT_ENABLED, $STR_DISP_OPT_DISABLED};
		default = 0;
		isBool = 1;
	};
	
	class BIS_WL_zoneRestrictionSetting
	{
		title = $STR_A3_mdl_supp_zonerest_name;
		values[] = {0, 1};
		texts[] = {$STR_A3_to_zoneprotection7, $STR_A3_to_zoneprotection9};
		default = 0;
	};
	
	class BIS_WL_fogOfWar
	{
		title = $STR_A3_WL_param_fog_of_war;
		values[] = {0, 1, 2};
		texts[] = {$STR_DISP_OPT_DISABLED, $STR_A3_WL_param_fog_of_war_value1, $STR_A3_WL_param_fog_of_war_value2};
		default = 1;
	};
};